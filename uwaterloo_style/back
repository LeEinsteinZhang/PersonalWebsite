#!/bin/bash

target=$1
clear_flg=$2

if [ -z "$target" ]; then
    echo "Error: Target not specified."
    exit 1
fi

if [ "$target" == "all" ] || [ "$target" == "a" ]; then
    if [ "$clear_flg" == "clear" ] || [ "$clear_flg" == "c" ]; then
        read -p "Are you sure you want to delete all the backups? (y/n): " confirm
        if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]; then
            rm -rf /var/www/backup
            echo "SUCCESSFUL CLEAR BACKUP"
            exit 0
        else
            echo "CANCEL DELETE OPERATION"
            exit 1
        fi
    fi
else
    if [ "$clear_flg" == "clear" ] || [ "$clear_flg" == "c" ]; then
        read -p "Are you sure you want to delete all the "$clear_flg" backups? (y/n): " confirm
        if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]; then
            rm -rf "/var/www/backup/${target}"  # Use the target in the directory pattern
            echo "SUCCESSFUL CLEAR BACKUP"
            exit 0
        else
            echo "CANCEL DELETE OPERATION"
            exit 1
        fi
    fi
fi

# Get the list of directories matching the new pattern, sorted in descending order
dirs=$(ls -d "/var/www/backup/${target}/${target}_backup_"* 2>/dev/null | sort -r)  # Adjusted pattern

# Get the most recent directory from the list
latest_dir=$(echo "$dirs" | head -n 1)

# Check if the latest_dir exists
if [ -z "$latest_dir" ]; then
    echo "NO MORE BACKUP"
    exit 1
fi

# Check and remove existing /var/www/$target if it exists
if [ -d "/var/www/$target" ]; then
    rm -rf "/var/www/$target"
fi

# Rename the latest directory to '$target'
mv "$latest_dir" "/var/www/$target"
