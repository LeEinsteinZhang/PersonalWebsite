#!/bin/bash

target=$1
clear_flg=$2

if [ -z "$target" ]; then
    echo "Error: Target not specified."
    exit 1
fi

if [ -f "../../cloud" ]; then
    echo "REMOTE"

    # extra clear operations
    if [ "$clear_flg" == "clear" ] || [ "$clear_flg" == "c" ]; then
        read -p "Are you sure you want to delete all the backups? (y/n): " confirm
        if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]; then
            rm -rf "../../${target}_backup_"*  # Use the target in the directory pattern
            echo "SUCCESSFUL CLEAR BACKUP"
            exit 0
        else
            echo "CANCEL DELETE OPERATION"
            exit 1
        fi
    fi

    # Get the list of directories matching the new pattern, sorted in descending order
    dirs=$(ls -d "../../${target}_backup_"* 2>/dev/null | sort -r)  # Adjusted pattern

    # Get the most recent directory from the list
    latest_dir=$(echo "$dirs" | head -n 1)

    # Check if the latest_dir exists
    if [ -z "$latest_dir" ]; then
        echo "NO MORE BACKUP"
        exit 1
    fi

    # Check and remove existing ../../$target if it exists
    if [ -d "../../$target" ]; then
        rm -rf "../../$target"
    fi

    # Rename the latest directory to '$target'
    mv "$latest_dir" "../../$target"
else
    echo "LOCALHOST"

    # Similar changes as above should be applied here for the 'LOCALHOST' section
    # ...

    if [ "$clear_flg" == "clear" ] || [ "$clear_flg" == "c" ]; then
        read -p "Are you sure you want to delete all the backups? (y/n): " confirm
        if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]; then
            rm -rf "../../localhost/${target}_backup_"*  # Adjusted pattern
            echo "SUCCESSFUL CLEAR BACKUP"
            exit 0
        else
            echo "CANCEL DELETE OPERATION"
            exit 1
        fi
    fi

    # Adjust the pattern for the new backup naming convention
    dirs=$(ls -d "../../localhost/${target}_backup_"* 2>/dev/null | sort -r)  # Adjusted pattern

    # The rest of the script remains largely the same, adjusting directory paths where necessary.
    # ...

fi

echo "Task completed!"
